---
interface ImpactStat {
  value: string;
  label: string;
  icon: string;
}

interface Props {
  title: string;
  subtitle: string;
  stats: ImpactStat[];
}

const { title, subtitle, stats } = Astro.props;

// Mapeo de nombres de iconos a paths SVG
const iconPaths = {
  package: "M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4",
  users: "M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z",
  recycle: "M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15",
  clock: "M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z",
  heart: "M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z",
  lightning: "M13 10V3L4 14h7v7l9-11h-7z",
  book: "M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"
};

// FunciÃ³n para obtener el path del icono o un path predeterminado
const getIconPath = (iconName: string) => {
  return iconPaths[iconName] || "M13 10V3L4 14h7v7l9-11h-7z"; // Lightning como predeterminado
};
---

<section class="py-20 bg-primary dark:bg-darkbg relative overflow-hidden">
  <!-- Elementos decorativos de fondo -->
  <div class="absolute inset-0 pointer-events-none">
    <div class="absolute top-0 left-0 w-64 h-64 bg-secondary/20 rounded-full -translate-x-1/3 -translate-y-1/3 blur-3xl"></div>
    <div class="absolute bottom-0 right-0 w-96 h-96 bg-secondary/20 rounded-full translate-x-1/3 translate-y-1/3 blur-3xl"></div>
    <div class="absolute top-1/2 left-1/2 w-72 h-72 bg-white/5 rounded-full -translate-x-1/2 -translate-y-1/2 blur-2xl"></div>
  </div>
  
  <div class="container mx-auto px-4 relative z-10">
    <div class="text-center mb-16">
      <h2 class="text-4xl font-bold text-white mb-4">{title}</h2>
      <p class="text-xl text-white/80 max-w-3xl mx-auto">
        {subtitle}
      </p>
    </div>
    
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 max-w-5xl mx-auto">
      {stats.map((stat) => (
        <div class="bg-white/10 backdrop-blur-sm rounded-xl p-6 text-center hover:bg-white/15 transition-all duration-300 transform hover:-translate-y-1 border border-white/10">
          <div class="w-16 h-16 rounded-full bg-white/10 flex items-center justify-center mx-auto mb-4">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={getIconPath(stat.icon)} />
            </svg>
          </div>
          <h3 class="text-3xl md:text-4xl font-bold text-white mb-2">{stat.value}</h3>
          <p class="text-white/80">{stat.label}</p>
        </div>
      ))}
    </div>
  </div>
</section>

