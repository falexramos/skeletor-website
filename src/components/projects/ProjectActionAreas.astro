---
import { getActionAreaIconPath } from './ProjectIconMapper.astro';

interface ActionArea {
  title: string;
  description: string;
  icon: string;
}

interface Props {
  title: string;
  subtitle: string;
  actionAreas: ActionArea[];
}

const { title, subtitle, actionAreas } = Astro.props;
---

<section class="py-20 bg-white dark:bg-darkbg/80">
  <div class="container mx-auto px-4">
    <div class="text-center mb-12">
      <h2 class="text-3xl sm:text-4xl font-bold mb-3 text-primary dark:text-white">
        {title}
      </h2>
      
      <p class="text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto">
        {subtitle}
      </p>
      
      <div class="h-1 w-24 bg-secondary mx-auto mt-4 rounded"></div>
    </div>
    
    <div class="grid grid-cols-1 md:grid-cols-2 gap-8 max-w-5xl mx-auto mt-12">
      {actionAreas.map((area) => (
        <div class="bg-gray-50 dark:bg-darkbg/50 rounded-xl p-6 md:p-8 shadow-md hover:shadow-lg transition-all duration-300 border border-gray-100 dark:border-white/5 flex gap-6 group">
          <div class="flex-shrink-0">
            <div class="w-14 h-14 rounded-full bg-primary/10 dark:bg-secondary flex items-center justify-center group-hover:bg-primary/20 dark:group-hover:bg-secondary/30 transition-colors duration-300">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-7 w-7 text-primary" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={getActionAreaIconPath(area.icon)} />
              </svg>
            </div>
          </div>
          <div>
            <h3 class="text-xl font-semibold text-gray-800 dark:text-white mb-2">{area.title}</h3>
            <p class="text-gray-600 dark:text-gray-300">{area.description}</p>
          </div>
        </div>
      ))}
    </div>
  </div>
</section>

<style>
  /* Animaciones para elementos al hacer scroll */
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  section.in-view .grid > div {
    opacity: 0;
    animation: fadeInUp 0.6s ease-out forwards;
  }

  section.in-view .grid > div:nth-child(2) {
    animation-delay: 0.2s;
  }

  section.in-view .grid > div:nth-child(3) {
    animation-delay: 0.4s;
  }

  section.in-view .grid > div:nth-child(4) {
    animation-delay: 0.6s;
  }
</style>

