---
interface Props {
  title: string;
  subtitle: string;
  impactItems: string[];
}

const { title, subtitle, impactItems } = Astro.props;

// Iconos para cada item de impacto basados en su Ã­ndice
const getImpactIcon = (index: number) => {
  const icons = [
    "M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z", // Lightbulb
    "M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z", // People
    "M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253", // Book
    "M13 10V3L4 14h7v7l9-11h-7z", // Lightning
    "M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z", // Heart
    "M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9" // Globe
  ];
  return icons[index % icons.length];
};
---

<section class="py-20 bg-primary dark:bg-darkbg relative overflow-hidden">
  <!-- Elementos decorativos de fondo -->
  <div class="absolute inset-0 pointer-events-none">
    <div class="absolute top-0 left-0 w-64 h-64 bg-secondary/20 rounded-full -translate-x-1/3 -translate-y-1/3 blur-3xl"></div>
    <div class="absolute bottom-0 right-0 w-96 h-96 bg-secondary/20 rounded-full translate-x-1/3 translate-y-1/3 blur-3xl"></div>
    <div class="absolute top-1/2 left-1/2 w-72 h-72 bg-white/5 rounded-full -translate-x-1/2 -translate-y-1/2 blur-2xl"></div>
  </div>
  
  <div class="container mx-auto px-4 relative z-10">
    <div class="text-center mb-16">
      <h2 class="text-4xl font-bold text-white mb-4">{title}</h2>
      <p class="text-xl text-white/80 max-w-3xl mx-auto">
        {subtitle}
      </p>
    </div>
    
    <div class="grid grid-cols-1 md:grid-cols-3 gap-6 max-w-5xl mx-auto">
      {impactItems.map((item, index) => (
        <div class="bg-white/10 backdrop-blur-sm rounded-xl p-6 text-center hover:bg-white/15 transition-all duration-300 transform hover:-translate-y-1 border border-white/10">
          <div class="w-16 h-16 rounded-full bg-white/10 flex items-center justify-center mx-auto mb-4">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={getImpactIcon(index)} />
            </svg>
          </div>
          <p class="text-white/90 text-lg">{item}</p>
        </div>
      ))}
    </div>
  </div>
</section>

<style>
  /* Animaciones para elementos al hacer scroll */
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  section.in-view .grid > div {
    opacity: 0;
    animation: fadeInUp 0.6s ease-out forwards;
  }

  section.in-view .grid > div:nth-child(2) {
    animation-delay: 0.2s;
  }

  section.in-view .grid > div:nth-child(3) {
    animation-delay: 0.4s;
  }
</style>

