---
interface Props {
  title: string;
  description: string;
  backgroundColor?: string;
  textColor?: string;
  minHeight?: string;
  backgroundImage?: string;
}

const { 
  title, 
  description, 
  backgroundColor = 'bg-darkbg', 
  textColor = 'text-white', 
  minHeight = 'min-h-[50vh] md:min-h-[70vh]',
  backgroundImage = '/assets/img/gallery/mires_alimentando_esperanza1.avif' // Default background image
} = Astro.props;
---

<section 
  class={`relative ${minHeight} flex flex-col justify-center items-center text-center pt-20 sm:pt-24 md:pt-28 lg:pt-32 overflow-hidden ${backgroundColor}`}
>
  <!-- Background Image with Responsive Handling -->
  <div class="absolute inset-0 overflow-hidden">
    <!-- Background Image Container with Responsive Positioning -->
    <div class="absolute inset-0 w-full h-full">
      <img 
        src={backgroundImage || "/placeholder.svg"} 
        alt="Background" 
        class="w-full h-full object-cover object-center md:object-[center_40%]"
      />
    </div>
    
    <!-- Overlay Gradient - Adjusted for better visibility -->
    <div class="absolute inset-0 bg-gradient-to-br from-primary/40 via-darkbg/60 to-secondary/40"></div>
    
    <!-- Additional Overlay for Text Readability -->
    <div class="absolute inset-0 bg-darkbg/50"></div>
    
    <!-- Decorative Elements -->
    <div class="absolute top-0 right-0 w-1/2 h-1/2 bg-secondary/20 rounded-full transform translate-x-1/4 -translate-y-1/4 blur-3xl"></div>
    <div class="absolute bottom-0 left-0 w-1/2 h-1/2 bg-primary/20 rounded-full transform -translate-x-1/4 translate-y-1/4 blur-3xl"></div>
    
    <!-- Subtle Diagonal Lines -->
    <div class="absolute inset-0 opacity-10">
      <div class="absolute top-0 left-0 w-full h-full">
        <div class="h-[1px] w-full bg-white transform rotate-45 origin-top-left"></div>
        <div class="h-[1px] w-full bg-white transform rotate-45 origin-top-left translate-y-20"></div>
        <div class="h-[1px] w-full bg-white transform rotate-45 origin-top-left translate-y-40"></div>
        <div class="h-[1px] w-full bg-white transform rotate-45 origin-top-left translate-y-60"></div>
        <div class="h-[1px] w-full bg-white transform rotate-45 origin-top-left translate-y-80"></div>
      </div>
    </div>
  </div>

  <!-- Main Content -->
  <div class="container mx-auto px-6 relative z-30 flex flex-col items-center justify-center space-y-8">
    <!-- Title with Highlight Effect -->
    <div class="relative">
      <h1 
        class={`text-4xl sm:text-5xl md:text-6xl font-bold ${textColor} leading-tight max-w-4xl animate-slide-up`}
      >
        <span class="relative inline-block">
          {title}
          <span class="absolute -bottom-2 left-0 w-full h-1 bg-secondary transform scale-x-0 animate-expand origin-left"></span>
        </span>
      </h1>
    </div>
    
    <!-- Description with Backdrop -->
    <div class="backdrop-blur-sm bg-darkbg/30 dark:bg-darkbg/40 p-6 rounded-xl border border-white/10 shadow-2xl animate-fade-in max-w-2xl">
      <p 
        class={`text-lg sm:text-xl md:text-2xl ${textColor} text-center`} 
      >
        {description}
      </p>
    </div>
    
    <!-- Optional Slot for Buttons or Additional Content -->
    <div class="animate-fade-in delay-300">
      <slot />
    </div>
  </div>

  <!-- Scroll Indicator with Enhanced Design -->
  
</section>

<style>
  /* Enhanced Animations */
  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(20px); }
    to { opacity: 1; transform: translateY(0); }
  }
  
  @keyframes slideUp {
    from { opacity: 0; transform: translateY(40px); }
    to { opacity: 1; transform: translateY(0); }
  }
  
  @keyframes expand {
    from { transform: scaleX(0); }
    to { transform: scaleX(1); }
  }
  
  @keyframes float {
    0%, 100% { transform: translateY(0) translateX(-50%); }
    50% { transform: translateY(-15px) translateX(-50%); }
  }
  
  .animate-fade-in {
    opacity: 0;
    animation: fadeIn 1s ease-out forwards;
  }
  
  .animate-slide-up {
    opacity: 0;
    animation: slideUp 1.2s ease-out forwards;
  }
  
  .animate-expand {
    animation: expand 1.5s ease-out forwards 0.5s;
  }
  
  .animate-float {
    animation: float 3s ease-in-out infinite;
  }
  
  .delay-300 {
    animation-delay: 300ms;
  }
</style>

