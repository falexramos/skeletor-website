---
interface Value {
  id: number;
  title: string;
  reference?: string;
  description: string;
}

interface Props {
  values: Value[];
  titleSection: string;
}

const { values,titleSection } = Astro.props;

// Iconos para cada valor basados en su ID
const getValueIcon = (id: number) => {
  switch(id) {
    case 1: return "human-dignity";
    case 2: return "equality";
    case 3: return "solidarity";
    case 4: return "family";
    case 5: return "assistance";
    case 6: return "protection";
    case 7: return "sustainability";
    case 8: return "faith";
    default: return "default";
  }
};
---

<section class="py-20 bg-white dark:bg-darkbg/80 relative overflow-hidden">
  <!-- Elementos decorativos de fondo -->
  <div class="absolute inset-0 overflow-hidden pointer-events-none">
    <div class="absolute top-1/4 right-0 w-1/2 h-1/2 bg-primary/5 rounded-full transform translate-x-1/4 blur-3xl"></div>
    <div class="absolute bottom-1/4 left-0 w-1/2 h-1/2 bg-secondary/5 rounded-full transform -translate-x-1/4 blur-3xl"></div>
  </div>
  
  <div class="container mx-auto px-4 relative z-10">
    <div class="text-center mb-16">
      <h2 class="text-3xl sm:text-4xl font-bold mb-4 text-primary dark:text-white">
        {titleSection}
      </h2>
      <div class="h-1 w-24 bg-secondary mx-auto mt-4 rounded"></div>
    </div>
    
    <div class="grid grid-cols-1 md:grid-cols-2 gap-8 max-w-6xl mx-auto">
      {values.map((value) => (
        <div class="bg-gray-50 dark:bg-darkbg/50 rounded-2xl shadow-md hover:shadow-xl transition-all duration-300 border border-gray-100 dark:border-white/5 overflow-hidden group">
          <div class="p-8 relative">
            <!-- Elemento decorativo superior -->
            <div class="absolute top-0 right-0 w-24 h-24 bg-secondary/20 rounded-full 
            transform translate-x-1/3 -translate-y-1/3 group-hover:bg-primary/10 transition-colors duration-300"></div>
            
            <div class="relative z-10">
              <div class="flex items-start gap-4 mb-6">
                <div class="flex-shrink-0 mt-1">
                  <div class="w-12 h-12 rounded-full bg-primary/10 dark:bg-secondary/30 flex items-center justify-center 
                  group-hover:bg-secondary/30 dark:group-hover:bg-secondary transition-colors duration-300">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-primary dark:text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      {getValueIcon(value.id) === "human-dignity" && <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />}
                      {getValueIcon(value.id) === "equality" && <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 6l3 1m0 0l-3 9a5.002 5.002 0 006.001 0M6 7l3 9M6 7l6-2m6 2l3-1m-3 1l-3 9a5.002 5.002 0 006.001 0M18 7l3 9m-3-9l-6-2m0-2v2m0 16V5m0 16H9m3 0h3" />}
                      {getValueIcon(value.id) === "solidarity" && <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z" />}
                      {getValueIcon(value.id) === "family" && <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />}
                      {getValueIcon(value.id) === "assistance" && <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z" />}
                      {getValueIcon(value.id) === "protection" && <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z" />}
                      {getValueIcon(value.id) === "sustainability" && <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />}
                      {getValueIcon(value.id) === "faith" && <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />}
                      {getValueIcon(value.id) === "default" && <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" />}
                    </svg>
                  </div>
                </div>
                
                <div>
                  <h3 class="text-xl font-bold text-primary dark:text-white mb-2">{value.title}</h3>
                  
                  {value.reference && (
                    <span class="inline-block px-3 py-1 bg-secondary/10 dark:bg-secondary/20 text-secondary dark:text-secondary/90 text-sm font-medium rounded-full">
                      {value.reference}
                    </span>
                  )}
                </div>
              </div>
              
              <p class="text-gray-700 dark:text-gray-300 leading-relaxed pl-16">
                {value.description}
              </p>
            </div>
          </div>
        </div>
      ))}
    </div>
  </div>
</section>

