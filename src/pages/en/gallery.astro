---
import HeroSection from "@/components/HeroSection.astro";
import BaseLayout from "../../layouts/BaseLayout.astro";
import "photoswipe/style.css";
import SimpleHeroSection from "@/components/SimpleHeroSection.astro";
import Cta from "@/components/Cta.astro";
import { getRelativeLocaleUrl } from "astro:i18n";
import GalleryModal from "@/components/GalleryModal.astro";


const currentLang = Astro.currentLocale || "es";


const categories = [
  {
    id: "dana",
    name: "DANA Project",
    description: "Aid and reconstruction after floods",
    cover: "/assets/img/gallery/mires_dana_7.avif", 
  },
  {
    id: "food",
    name: "Feeding Hope",
    description: "Distribution of food and basic resources",
    cover: "/assets/img/gallery/mires_alimentando_esperanza_7.avif",
  },
  {
    id: "events",
    name: "Solidarity Events",
    description: "Community activities and gatherings",
    cover: "/assets/img/gallery/mires_mas_que_un_regalo_navidad_2.avif",
  },
  {
    id: "volunteers",
    name: "Volunteering",
    description: "Our team in action",
    cover: "/assets/img/gallery/mires_colaboradores_4.avif",
  },
];


const images = [
  // Alimentando Esperanza
  {
    src: "/assets/img/gallery/mires_alimentando_esperanza_19.avif",
    alt: "Alimentando Esperanza - MIRES",
    category: "food",
  },
  {
    src: "/assets/img/gallery/mires_alimentando_esperanza_2.avif",
    alt: "Alimentando Esperanza - MIRES",
    category: "food",
  },
  {
    src: "/assets/img/gallery/mires_alimentando_esperanza_3.avif",
    alt: "Alimentando Esperanza - MIRES",
    category: "food",
  },
  {
    src: "/assets/img/gallery/mires_alimentando_esperanza_20.avif",
    alt: "Alimentando Esperanza - MIRES",
    category: "food",
  },
  {
    src: "/assets/img/gallery/mires_alimentando_esperanza_5.avif",
    alt: "Alimentando Esperanza - MIRES",
    category: "food",
  },
  {
    src: "/assets/img/gallery/mires_alimentando_esperanza_6.avif",
    alt: "Alimentando Esperanza - MIRES",
    category: "food",
  },
  {
    src: "/assets/img/gallery/mires_alimentando_esperanza_14.avif",
    alt: "Alimentando Esperanza - MIRES",
    category: "food",
  },
  {
    src: "/assets/img/gallery/mires_alimentando_esperanza_23.avif",
    alt: "Alimentando Esperanza - MIRES",
    category: "food",
  },
  {
    src: "/assets/img/gallery/mires_alimentando_esperanza_13.avif",
    alt: "Alimentando Esperanza - MIRES",
    category: "food",
  },
  // Proyecto DANA
  
  {
    src: "/assets/img/gallery/mires_dana_1.avif",
    alt: "Proyecto DANA - MIRES",
    category: "dana",
  },
  {
    src: "/assets/img/gallery/mires_dana_2.avif",
    alt: "Proyecto DANA - MIRES",
    category: "dana",
  },
  {
    src: "/assets/img/gallery/mires_dana_3.avif",
    alt: "Proyecto DANA - MIRES",
    category: "dana",
  },
  {
    src: "/assets/img/gallery/mires_dana_4.avif",
    alt: "Proyecto DANA - MIRES",
    category: "dana",
  },
  {
    src: "/assets/img/gallery/mires_dana_5.avif",
    alt: "Proyecto DANA - MIRES",
    category: "dana",
  },
  {
    src: "/assets/img/gallery/mires_dana_6.avif",
    alt: "Proyecto DANA - MIRES",
    category: "dana",
  },
  {
    src: "/assets/img/gallery/mires_dana_10.avif",
    alt: "Proyecto DANA - MIRES",
    category: "dana",
  },
  {
    src: "/assets/img/gallery/mires_dana_8.avif",
    alt: "Proyecto DANA - MIRES",
    category: "dana",
  },
  {
    src: "/assets/img/gallery/mires_dana_21.avif",
    alt: "Proyecto DANA - MIRES",
    category: "dana",
  },

  // Eventos
  {
    src: "/assets/img/gallery/mires_mas_que_un_regalo_navidad_1.avif",
    alt: "Eventos Solidarios - MIRES",
    category: "events",
  },
 
  {
    src: "/assets/img/gallery/mires_mas_que_un_regalo_navidad_3.avif",
    alt: "Eventos Solidarios - MIRES",
    category: "events",
  },
  {
    src: "/assets/img/gallery/mires_mas_que_un_regalo_navidad_4.avif",
    alt: "Eventos Solidarios - MIRES",
    category: "events",
  },
  {
    src: "/assets/img/gallery/mires_mas_que_un_regalo_navidad_5.avif",
    alt: "Eventos Solidarios - MIRES",
    category: "events",
  },
  {
    src: "/assets/img/gallery/mires_mas_que_un_regalo_navidad_6.avif",
    alt: "Eventos Solidarios - MIRES",
    category: "events",
  },
  {
    src: "/assets/img/gallery/mires_mas_que_un_regalo_navidad_7.avif",
    alt: "Eventos Solidarios - MIRES",
    category: "events",
  },
  {
    src: "/assets/img/gallery/mires_mas_que_un_regalo_navidad_11.avif",
    alt: "Eventos Solidarios - MIRES",
    category: "events",
  },
  {
    src: "/assets/img/gallery/mires_mas_que_un_regalo_navidad_10.avif",
    alt: "Eventos Solidarios - MIRES",
    category: "events",
  },
  {
    src: "/assets/img/gallery/mires_mas_que_un_regalo_navidad_9.avif",
    alt: "Eventos Solidarios - MIRES",
    category: "events",
  },

  // Voluntarios
  {
    src: "/assets/img/gallery/mires_voluntarios_portada.avif",
    alt: "Voluntarios - MIRES",
    category: "volunteers",
  },
  {
    src: "/assets/img/gallery/mires_voluntarios.avif",
    alt: "Voluntarios - MIRES",
    category: "volunteers",
  },
  {
    src: "/assets/img/gallery/mires_colaboradores_5.avif",
    alt: "Voluntarios - MIRES",
    category: "volunteers",
  },
  {
    src: "/assets/img/gallery/mires_voluntariado_3.avif",
    alt: "Voluntarios - MIRES",
    category: "volunteers",
  },
  {
    src: "/assets/img/gallery/mires_colaboradores_7.avif",
    alt: "Voluntarios - MIRES",
    category: "volunteers",
  },
  {
    src: "/assets/img/gallery/mires_colaboradores_8.avif",
    alt: "Voluntarios - MIRES",
    category: "volunteers",
  },
  {
    src: "/assets/img/gallery/mires_colaboradores_4.avif",
    alt: "Voluntarios - MIRES",
    category: "volunteers",
  },
  {
    src: "/assets/img/gallery/mires_voluntariado_2.avif",
    alt: "Voluntarios - MIRES",
    category: "volunteers",
  },
  {
    src: "/assets/img/gallery/mires_voluntariado_1.avif",
    alt: "Voluntarios - MIRES",
    category: "volunteers",
  },
];




const heroData = {
  title: "Gallery",
  description:
    "A visual journey through our work and impact on the community.",
   
};

const ctaData = {
  title: "Do you want to collaborate with the DANA Project?",
  description: "At MIRES, these values are not just words. They are our way of living, serving, and transforming lives.",
  contactLink: getRelativeLocaleUrl(currentLang, "contact"),
  donateLink: getRelativeLocaleUrl(currentLang, "donate"),
  contactText: "Contact Us",
  donateText: "Donate",
};

const videos = [
  {
    src: "/assets/videos/Mires_Proyecto_DANA_1.mp4",
    title: "Mires",
  },
  {
    src: "/assets/videos/mires_video_ayuda.mp4",
    title: "DANA Humanitarian Aid",
  },
];

---

<BaseLayout title="Gallery - MIRES">
   
   <SimpleHeroSection {...heroData} />

   
   <section class="py-16 bg-white dark:bg-darkbg">
     <div class="container mx-auto px-4">
       
       <div class="flex justify-center mb-12">
         <div class="inline-flex rounded-full border-2 border-primary/20 p-1 shadow-lg bg-white dark:bg-darkbg/90">
           <button id="tab-images" class="tab-button px-8 py-3 text-lg font-medium rounded-full bg-primary text-white shadow-md">
            Images
           </button>
           <button id="tab-videos" class="tab-button px-8 py-3 text-lg font-medium rounded-full text-primary hover:bg-primary/10 transition-colors">
             Videos
           </button>
         </div>
       </div>
       
       
       <div id="tab-content-images" class="tab-content">
         <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
           {
             categories.map((category) => (
               <button class="category-card group" data-category={category.id}>
                 <div class="relative overflow-hidden rounded-2xl shadow-lg aspect-[16/9]">
                   <img
                     src={category.cover || "/placeholder.svg"}
                     alt={category.name}
                     class="w-full h-full object-cover transform group-hover:scale-105 transition-transform duration-500"
                   />
                   <div class="absolute inset-0 bg-gradient-to-t from-black/80 via-black/50 to-transparent">
                     <div class="absolute bottom-0 left-0 right-0 p-6 text-left">
                       <h3 class="text-2xl font-bold text-white mb-2">
                         {category.name}
                       </h3>
                       <p class="text-white/90">{category.description}</p>
                     </div>
                   </div>
                 </div>
               </button>
             ))
           }
         </div>
       </div>
       
       <!-- Contenido de videos mejorado -->
       <div id="tab-content-videos" class="tab-content hidden">
         
         
         <!-- Grid de videos -->
         <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
           {videos.map((video, index) => (
             <div class="video-card group" data-video-src={video.src} data-video-title={video.title}>
               <div class="aspect-video overflow-hidden rounded-2xl shadow-lg relative">
                 
                 <video 
                   class="w-full h-full object-cover transform group-hover:scale-105 transition-transform duration-700"
                   src={video.src}
                   preload="metadata"
                   muted
                   disablePictureInPicture
                   disableRemotePlayback
                 ></video>
                 
                 
                 <div class="absolute inset-0 bg-gradient-to-t from-black/70 via-black/30 to-black/10 flex items-center justify-center cursor-pointer play-button group-hover:opacity-90 transition-opacity duration-300">
                   
                   <div class="relative">
                     
                     <div class="absolute inset-0 rounded-full bg-primary/30 animate-ping-slow opacity-0 group-hover:opacity-100"></div>
                     
                     
                     <div class="w-20 h-20 rounded-full bg-gradient-to-br from-primary to-secondary p-0.5 shadow-lg shadow-primary/30 transform group-hover:scale-110 transition-transform duration-300 relative z-10">
                       <div class="w-full h-full rounded-full bg-white dark:bg-darkbg/90 flex items-center justify-center">
                         <svg xmlns="http://www.w3.org/2000/svg" class="h-10 w-10" fill="none" viewBox="0 0 24 24" stroke="currentColor" style={`stroke: url(#video-btn-gradient-${index});`}>
                           <defs>
                             <linearGradient id={`video-btn-gradient-${index}`} x1="0%" y1="0%" x2="100%" y2="100%">
                               <stop offset="0%" stop-color="var(--color-primary)" />
                               <stop offset="100%" stop-color="var(--color-secondary)" />
                             </linearGradient>
                           </defs>
                           <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z" />
                           <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                         </svg>
                       </div>
                     </div>
                   </div>
                 </div>
                 
               </div>
               
               
               <div class="mt-4 p-2">
                 <h3 class="text-xl font-bold text-primary dark:text-white group-hover:bg-gradient-to-r group-hover:from-primary group-hover:to-secondary group-hover:bg-clip-text group-hover:text-transparent transition-all duration-300">{video.title}</h3>
                 {video.description && (
                   <p class="text-gray-600 dark:text-gray-300 mt-2">{video.description}</p>
                 )}
               </div>
             </div>
           ))}
         </div>
       </div>
     </div>
   </section>
 
   
   <GalleryModal categories={categories} images={images} videos={videos} />
 
   
   <div id="video-player-modal" class="fixed inset-0 bg-black/95 z-[60] hidden opacity-0 transition-opacity duration-300">
     <button
       id="close-video-player"
       class="absolute top-6 right-6 text-white text-4xl hover:text-secondary transition-colors z-10"
       aria-label="Cerrar video"
     >
       <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
         <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
       </svg>
     </button>
     
     <div class="flex items-center justify-center h-full">
       <div class="w-full max-w-5xl mx-auto px-4 transform transition-transform duration-500 scale-95 opacity-0" id="video-container">
         <h3 id="video-title" class="text-white text-2xl font-bold mb-6 text-center"></h3>
         <div class="relative pb-[56.25%] h-0 rounded-xl overflow-hidden shadow-2xl">
           <video 
             id="video-player" 
             class="absolute top-0 left-0 w-full h-full" 
             controls
             preload="metadata"
           >
             <source src="" type="video/mp4">
             Tu navegador no soporta videos HTML5.
           </video>
         </div>
       </div>
     </div>
   </div>
 
   <Cta {...ctaData} />
 </BaseLayout>
 
 <style>
   .category-card {
     @apply w-full transform hover:-translate-y-2 transition-all duration-300;
   }
   
   .video-card {
     @apply transform hover:-translate-y-2 transition-all duration-300 bg-white dark:bg-darkbg/30 rounded-2xl overflow-hidden shadow-lg border border-gray-100 dark:border-gray-800;
   }
   
   .tab-button {
     @apply transition-all duration-300;
   }
   
   
   @keyframes ping-slow {
     0% {
       transform: scale(1);
       opacity: 0.8;
     }
     50% {
       transform: scale(1.5);
       opacity: 0.4;
     }
     100% {
       transform: scale(2);
       opacity: 0;
     }
   }
   
   .animate-ping-slow {
     animation: ping-slow 2s cubic-bezier(0, 0, 0.2, 1) infinite;
   }
   
   
   :root {
     --color-primary: #3b82f6;  
     --color-secondary: #10b981; 
   }
 </style>
 
 <script>
   // Sistema de pestañas
   document.addEventListener('DOMContentLoaded', () => {
     const tabImages = document.getElementById('tab-images');
     const tabVideos = document.getElementById('tab-videos');
     const contentImages = document.getElementById('tab-content-images');
     const contentVideos = document.getElementById('tab-content-videos');
     
     if (tabImages && tabVideos && contentImages && contentVideos) {
       
       const switchTab = (activeTab: HTMLElement, inactiveTab: HTMLElement, activeContent: HTMLElement, inactiveContent: HTMLElement) => {
       
         activeTab.classList.add('bg-primary', 'text-white', 'shadow-md');
         activeTab.classList.remove('text-primary', 'hover:bg-primary/10');
         
       
         inactiveTab.classList.remove('bg-primary', 'text-white', 'shadow-md');
         inactiveTab.classList.add('text-primary', 'hover:bg-primary/10');
         
       
         inactiveContent.classList.add('hidden');
         activeContent.classList.remove('hidden');
         
       
         const items = activeContent.querySelectorAll('.category-card, .video-card');
         items.forEach((item, index) => {
           item.style.opacity = '0';
           item.style.transform = 'translateY(20px)';
           
           setTimeout(() => {
             item.style.transition = 'opacity 0.5s ease, transform 0.5s ease';
             item.style.opacity = '1';
             item.style.transform = 'translateY(0)';
           }, 50 * index);
         });
       };
       
       
       tabImages.addEventListener('click', () => {
         switchTab(tabImages, tabVideos, contentImages, contentVideos);
       });
       
       tabVideos.addEventListener('click', () => {
         switchTab(tabVideos, tabImages, contentVideos, contentImages);
       });
       
       
       const activeItems = contentImages.querySelectorAll('.category-card');
       activeItems.forEach((item, index) => {
         item.style.opacity = '0';
         item.style.transform = 'translateY(20px)';
         
         setTimeout(() => {
           item.style.transition = 'opacity 0.5s ease, transform 0.5s ease';
           item.style.opacity = '1';
           item.style.transform = 'translateY(0)';
         }, 50 * index);
       });
     }
     
     
     const videoElements = document.querySelectorAll('.video-card video');
     videoElements.forEach(video => {
     
       (video as HTMLVideoElement).currentTime = 0.1;
     });
     
     
     const playButtons = document.querySelectorAll('.play-button');
     const videoPlayerModal = document.getElementById('video-player-modal');
     const videoContainer = document.getElementById('video-container');
     const videoPlayer = document.getElementById('video-player') as HTMLVideoElement;
     const videoTitle = document.getElementById('video-title');
     const closeVideoPlayerButton = document.getElementById('close-video-player');
     
     playButtons.forEach((button) => {
       button.addEventListener('click', () => {
         const videoCard = button.closest('.video-card') as HTMLElement;
         const videoSrc = videoCard.dataset.videoSrc;
         const videoTitleText = videoCard.dataset.videoTitle;
         
         if (videoSrc && videoPlayerModal && videoPlayer && videoContainer) {
           
           const source = videoPlayer.querySelector("source");
           if (source) {
             source.setAttribute("src", videoSrc);
             videoPlayer.load();
           }
           
           
           if (videoTitle && videoTitleText) {
             videoTitle.textContent = videoTitleText;
           }
           
           
           videoPlayerModal.classList.remove("hidden");
           document.body.style.overflow = "hidden";
           
           
           setTimeout(() => {
             videoPlayerModal.style.opacity = "1";
             videoContainer.style.opacity = "1";
             videoContainer.style.transform = "scale(1)";
             
           
             setTimeout(() => {
               videoPlayer.play().catch(e => console.log("Error al reproducir el video:", e));
             }, 300);
           }, 50);
         }
       });
     });
     
     
     if (closeVideoPlayerButton && videoPlayerModal && videoContainer) {
       closeVideoPlayerButton.addEventListener('click', () => {
         
         videoContainer.style.opacity = "0";
         videoContainer.style.transform = "scale(0.95)";
         videoPlayerModal.style.opacity = "0";
         
         
         setTimeout(() => {
           videoPlayerModal.classList.add('hidden');
           document.body.style.overflow = "auto";
           
           if (videoPlayer) {
             videoPlayer.pause();
             videoPlayer.currentTime = 0;
           }
         }, 300);
       });
     }
     
     
     document.addEventListener("keydown", (e) => {
       if (e.key === "Escape" && videoPlayerModal && !videoPlayerModal.classList.contains('hidden')) {
         if (videoContainer) {
           videoContainer.style.opacity = "0";
           videoContainer.style.transform = "scale(0.95)";
         }
         videoPlayerModal.style.opacity = "0";
         
         setTimeout(() => {
           videoPlayerModal.classList.add('hidden');
           document.body.style.overflow = "auto";
           
           if (videoPlayer) {
             videoPlayer.pause();
             videoPlayer.currentTime = 0;
           }
         }, 300);
       }
     });
   });
 </script>